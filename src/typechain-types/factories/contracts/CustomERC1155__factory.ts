/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CustomERC1155,
  CustomERC1155Interface,
} from "../../contracts/CustomERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
      {
        internalType: "contract Logger",
        name: "logger_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a0638038062001a068339810160408190526200003491620000ab565b6200003f8262000066565b600380546001600160a01b0319166001600160a01b039290921691909117905550620002ee565b600262000074828262000222565b5050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620000a657600080fd5b919050565b60008060408385031215620000bf57600080fd5b82516001600160401b0380821115620000d757600080fd5b818501915085601f830112620000ec57600080fd5b81518181111562000101576200010162000078565b604051601f8201601f19908116603f011681019083821181831017156200012c576200012c62000078565b816040528281526020935088848487010111156200014957600080fd5b600091505b828210156200016d57848201840151818301850152908301906200014e565b6000848483010152809650505050620001888186016200008e565b925050509250929050565b600181811c90821680620001a857607f821691505b602082108103620001c957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021d57600081815260208120601f850160051c81016020861015620001f85750805b601f850160051c820191505b81811015620002195782815560010162000204565b5050505b505050565b81516001600160401b038111156200023e576200023e62000078565b62000256816200024f845462000193565b84620001cf565b602080601f8311600181146200028e5760008415620002755750858301515b600019600386901b1c1916600185901b17855562000219565b600085815260208120601f198616915b82811015620002bf578886015182559484019460019091019084016200029e565b5085821015620002de5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61170880620002fe6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610fac565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610fef565b610238565b60405190151581526020016100a9565b6100e86100e3366004611013565b6102d3565b6040516100a99190611072565b6101086101033660046111d1565b610367565b005b61011d61011836600461127b565b610409565b6040516100a99190611381565b610108610138366004611394565b610547565b6100c561014b3660046113d0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004611403565b610556565b60006001600160a01b03831661020f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061029b57506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061023257507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614610232565b6060600280546102e290611468565b80601f016020809104026020016040519081016040528092919081815260200182805461030e90611468565b801561035b5780601f106103305761010080835404028352916020019161035b565b820191906000526020600020905b81548152906001019060200180831161033e57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103835750610383853361014b565b6103f55760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152608401610206565b61040285858585856105f1565b5050505050565b606081518351146104825760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610206565b6000835167ffffffffffffffff81111561049e5761049e611085565b6040519080825280602002602001820160405280156104c7578160200160208202803683370190505b50905060005b845181101561053f576105128582815181106104eb576104eb6114a2565b6020026020010151858381518110610505576105056114a2565b602002602001015161018c565b828281518110610524576105246114a2565b6020908102919091010152610538816114ce565b90506104cd565b509392505050565b6105523383836108e7565b5050565b6001600160a01b0385163314806105725750610572853361014b565b6105e45760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152608401610206565b6104028585858585610a63565b81518351146106685760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b0384166106cc5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b3360005b84518110156107f65760008582815181106106ed576106ed6114a2565b60200260200101519050600085838151811061070b5761070b6114a2565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561079e5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906107db9084906114e7565b92505081905550505050806107ef906114ce565b90506106d0565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108469291906114fa565b60405180910390a46003546040517fbcee35790000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063bcee35799061089f9084908a908a908a908a90600401611528565b600060405180830381600087803b1580156108b957600080fd5b505af11580156108cd573d6000803e3d6000fd5b505050506108df818787878787610ca4565b505050505050565b816001600160a01b0316836001600160a01b03160361096e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a36003546040517f55c45fbe0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015284811660248301528315156044830152909116906355c45fbe90606401600060405180830381600087803b158015610a4657600080fd5b505af1158015610a5a573d6000803e3d6000fd5b50505050505050565b6001600160a01b038416610ac75760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b336000610ad385610e49565b90506000610ae085610e49565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610b665760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610ba39084906114e7565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46003546040517f205b13af0000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301528b811660248301528a81166044830152606482018a9052608482018990529091169063205b13af9060a401600060405180830381600087803b158015610c7357600080fd5b505af1158015610c87573d6000803e3d6000fd5b50505050610c99848a8a8a8a8a610e94565b505050505050505050565b6001600160a01b0384163b156108df5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610ce8908990899088908890889060040161157a565b6020604051808303816000875af1925050508015610d23575060408051601f3d908101601f19168201909252610d20918101906115cc565b60015b610dd857610d2f6115e9565b806308c379a003610d685750610d43611605565b80610d4e5750610d6a565b8060405162461bcd60e51b81526004016102069190611072565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610206565b6001600160e01b0319811663bc197c8160e01b14610a5a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610e8357610e836114a2565b602090810291909101015292915050565b6001600160a01b0384163b156108df5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ed8908990899088908890889060040161168f565b6020604051808303816000875af1925050508015610f13575060408051601f3d908101601f19168201909252610f10918101906115cc565b60015b610f1f57610d2f6115e9565b6001600160e01b0319811663f23a6e6160e01b14610a5a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b80356001600160a01b0381168114610fa757600080fd5b919050565b60008060408385031215610fbf57600080fd5b610fc883610f90565b946020939093013593505050565b6001600160e01b031981168114610fec57600080fd5b50565b60006020828403121561100157600080fd5b813561100c81610fd6565b9392505050565b60006020828403121561102557600080fd5b5035919050565b6000815180845260005b8181101561105257602081850181015186830182015201611036565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061100c602083018461102c565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156110c1576110c1611085565b6040525050565b600067ffffffffffffffff8211156110e2576110e2611085565b5060051b60200190565b600082601f8301126110fd57600080fd5b8135602061110a826110c8565b604051611117828261109b565b83815260059390931b850182019282810191508684111561113757600080fd5b8286015b84811015611152578035835291830191830161113b565b509695505050505050565b600082601f83011261116e57600080fd5b813567ffffffffffffffff81111561118857611188611085565b60405161119f601f8301601f19166020018261109b565b8181528460208386010111156111b457600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156111e957600080fd5b6111f286610f90565b945061120060208701610f90565b9350604086013567ffffffffffffffff8082111561121d57600080fd5b61122989838a016110ec565b9450606088013591508082111561123f57600080fd5b61124b89838a016110ec565b9350608088013591508082111561126157600080fd5b5061126e8882890161115d565b9150509295509295909350565b6000806040838503121561128e57600080fd5b823567ffffffffffffffff808211156112a657600080fd5b818501915085601f8301126112ba57600080fd5b813560206112c7826110c8565b6040516112d4828261109b565b83815260059390931b85018201928281019150898411156112f457600080fd5b948201945b838610156113195761130a86610f90565b825294820194908201906112f9565b9650508601359250508082111561132f57600080fd5b5061133c858286016110ec565b9150509250929050565b600081518084526020808501945080840160005b838110156113765781518752958201959082019060010161135a565b509495945050505050565b60208152600061100c6020830184611346565b600080604083850312156113a757600080fd5b6113b083610f90565b9150602083013580151581146113c557600080fd5b809150509250929050565b600080604083850312156113e357600080fd5b6113ec83610f90565b91506113fa60208401610f90565b90509250929050565b600080600080600060a0868803121561141b57600080fd5b61142486610f90565b945061143260208701610f90565b93506040860135925060608601359150608086013567ffffffffffffffff81111561145c57600080fd5b61126e8882890161115d565b600181811c9082168061147c57607f821691505b60208210810361149c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114e0576114e06114b8565b5060010190565b80820180821115610232576102326114b8565b60408152600061150d6040830185611346565b828103602084015261151f8185611346565b95945050505050565b60006001600160a01b038088168352808716602084015280861660408401525060a0606083015261155c60a0830185611346565b828103608084015261156e8185611346565b98975050505050505050565b60006001600160a01b03808816835280871660208401525060a060408301526115a660a0830186611346565b82810360608401526115b88186611346565b9050828103608084015261156e818561102c565b6000602082840312156115de57600080fd5b815161100c81610fd6565b600060033d11156116025760046000803e5060005160e01c5b90565b600060443d10156116135790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561164357505050505090565b828501915081518181111561165b5750505050505090565b843d87010160208285010111156116755750505050505090565b6116846020828601018761109b565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526116c760a083018461102c565b97965050505050505056fea2646970667358221220c7f35253cfe68f4f7228f2a171d71c6a56583457206827082066849cad3a3b3764736f6c63430008110033";

type CustomERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomERC1155__factory extends ContractFactory {
  constructor(...args: CustomERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    logger_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CustomERC1155> {
    return super.deploy(
      uri_,
      logger_,
      overrides || {}
    ) as Promise<CustomERC1155>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    logger_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, logger_, overrides || {});
  }
  override attach(address: string): CustomERC1155 {
    return super.attach(address) as CustomERC1155;
  }
  override connect(signer: Signer): CustomERC1155__factory {
    return super.connect(signer) as CustomERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomERC1155Interface {
    return new utils.Interface(_abi) as CustomERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CustomERC1155 {
    return new Contract(address, _abi, signerOrProvider) as CustomERC1155;
  }
}
