/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CustomERC1155,
  CustomERC1155Interface,
} from "../../contracts/CustomERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
      {
        internalType: "contract Logger",
        name: "logger_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620002325762001536803803806200001d816200024c565b928339810190604081830312620002325780516001600160401b03908181116200023257820191601f84818501121562000232578351918383116200021c57602092601f199562000074858886850116016200024c565b9782895285838301011162000232579084929160005b82811062000237575050600090880183015201516001600160a01b0381169590869003620002325780519384116200021c57600254926001938481811c9116801562000211575b82821014620001fb57838111620001af575b50809285116001146200014457508394509083929160009462000138575b50501b916000199060031b1c1916176002555b600380546001600160a01b0319169190911790556040516112c39081620002738239f35b01519250388062000101565b929484908116600260005284600020946000905b888383106200019457505050106200017a575b505050811b0160025562000114565b015160001960f88460031b161c191690553880806200016b565b85870151885590960195948501948793509081019062000158565b6002600052816000208480880160051c820192848910620001f1575b0160051c019085905b828110620001e4575050620000e3565b60008155018590620001d4565b92508192620001cb565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000d1565b634e487b7160e01b600052604160045260246000fd5b600080fd5b8181018501518a82018601528694016200008a565b6040519190601f01601f191682016001600160401b038111838210176200021c5760405256fe60406080815260048036101561001457600080fd5b600091823560e01c8062fdd58e14610d7857806301ffc9a714610cbe5780630e89341c14610ba65780632eb2c2d6146107c85780634e1273f414610615578063a22cb465146104a0578063e985e9c51461044b5763f242432a1461007757600080fd5b346104475760a036600319011261044757610090610da8565b83610099610dbe565b60443560643560843567ffffffffffffffff8111610443576100be9036908901610ed6565b926001600160a01b0380961692338414801561041e575b6100de90611047565b868216916100ed8315156110b8565b6100f682611257565b5061010084611257565b50818752602097878952898820866000528952848a6000205461012582821015611129565b848a52898b528b8a20886000528b52038a600020558288528789528988208460005289528960002061015886825461119a565b905583868b51858152878c8201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628d3392a460035416803b1561041a5787809160a48d8d5194859384927f205b13af00000000000000000000000000000000000000000000000000000000845233908401528b60248401528960448401528860648401528a60848401525af18015610410579088916103f8575b50503b6101fe578580f35b889587946102588a51978896879586947ff23a6e61000000000000000000000000000000000000000000000000000000009c8d8752339087015260248601526044850152606484015260a0608484015260a4830190610dd4565b03925af18691816103c9575b5061033f5750506001906102766111c7565b6308c379a01461030c575b506102965750505b3880808381808080808580f35b61030892505191829162461bcd60e51b8352820160809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560408201527f526563656976657220696d706c656d656e74657200000000000000000000000060608201520190565b0390fd5b6103146111e5565b8061031f5750610281565b6103088591855193849362461bcd60e51b85528401526024830190610dd4565b6001600160e01b031916039050610357575050610289565b61030892505191829162461bcd60e51b8352820160809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a6563746560408201527f6420746f6b656e7300000000000000000000000000000000000000000000000060608201520190565b6103ea919250843d86116103f1575b6103e28183610e3e565b8101906111a7565b9038610264565b503d6103d8565b61040190610e14565b61040c5786386101f3565b8680fd5b8a513d8a823e3d90fd5b8780fd5b508386526001602052878620336000526020526100de60ff89600020541690506100d5565b8480fd5b8280fd5b83823461049c578060031936011261049c57602091610468610da8565b82610471610dbe565b926001600160a01b03809316815260018652209116600052825260ff81600020541690519015158152f35b5080fd5b5091903461049c578260031936011261049c576104bb610da8565b9260243591821515809303610611576001600160a01b038095168033146105a85784953386526001602052838620826000526020528360002060ff1981541660ff87161790558184518681527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a360035416803b156105a457859283606492865197889586947f55c45fbe0000000000000000000000000000000000000000000000000000000086523390860152602485015260448401525af190811561059b57506105885750f35b61059190610e14565b6105985780f35b80fd5b513d84823e3d90fd5b8580fd5b506020608492519162461bcd60e51b8352820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152fd5b8380fd5b509034610447578160031936011261044757803567ffffffffffffffff808211610443573660238301121561044357818301359061065282610e60565b9261065f86519485610e3e565b82845260209260248486019160051b830101913683116107c457602401905b8282106107a0575050506024359081116105a45761069f9036908501610e78565b92825184510361073957508151946106b686610e60565b956106c386519788610e3e565b8087526106d2601f1991610e60565b0136838801375b8251811015610723578061070e6001600160a01b036106fb61071e948761101d565b5116610707838861101d565b5190610f61565b610718828961101d565b52610ff8565b6106d9565b84518281528061073581850189610f2d565b0390f35b60849185519162461bcd60e51b8352820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152fd5b81356001600160a01b03811681036107bf57815290840190840161067e565b600080fd5b8880fd5b509034610447576003199160a036840112610611576107e5610da8565b926107ee610dbe565b906044359367ffffffffffffffff9485811161041a576108119036908301610e78565b906064358681116107c4576108299036908301610e78565b956084359081116107c4576108419036908301610ed6565b926001600160a01b03809816933385148015610b87575b61086190611047565b8351885103610b1e57888616956108798715156110b8565b8a5b8b865182101561090057908a6108f48b6108fb948c8c6108a7876108a08f829061101d565b519761101d565b519580845286602092858452868620818752845286862054906108cc83831015611129565b838752868552878720908752845203858520558352828152838320918352522091825461119a565b9055610ff8565b61087b565b505090919594969793929885888a518b81527f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb61093f8d830189610f2d565b9180830360208201528061095433948c610f2d565b0390a460035416803b15610b1a578a895180927fbcee3579000000000000000000000000000000000000000000000000000000008252338d8301528a602483015288604483015260a060648301528183816109c68d6109b660a484018d610f2d565b908382030160848401528c610f2d565b03925af18015610b1057610afd575b503b6109df578880f35b865194859384937fbc197c810000000000000000000000000000000000000000000000000000000098898652338c87015260248601526044850160a0905260a48501610a2a91610f2d565b82858203016064860152610a3d91610f2d565b90838203016084840152610a5091610dd4565b0381885a94602095f1859181610add575b50610ac75750506001610a726111c7565b6308c379a014610a90575b6102965750505b38808080808080808880f35b610a986111e5565b80610aa35750610a7d565b905061030891602094505193849362461bcd60e51b85528401526024830190610dd4565b6001600160e01b03191603610357575050610a84565b610af691925060203d81116103f1576103e28183610e3e565b9038610a61565b610b09909a919a610e14565b98386109d5565b89513d8d823e3d90fd5b8a80fd5b608483602089519162461bcd60e51b8352820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152fd5b50848a5260016020908152878b20338c529052868a205460ff16610858565b5082903461049c576020908160031936011261044757805192806002549060019082821c928281168015610cb4575b8785108114610ca1578899509688969785829a529182600014610c7a575050600114610c1e575b5050506107359291610c0f910385610e3e565b51928284938452830190610dd4565b9190869350600283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b828410610c625750505082010181610c0f610735610bfc565b8054848a018601528895508794909301928101610c49565b60ff19168782015293151560051b86019093019350849250610c0f91506107359050610bfc565b60248360228c634e487b7160e01b835252fd5b93607f1693610bd5565b5090346104475760203660031901126104475735906001600160e01b0319821680920361044757602092507fd9b67a26000000000000000000000000000000000000000000000000000000008214918215610d4e575b8215610d24575b50519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000014915038610d1b565b7f0e89341c0000000000000000000000000000000000000000000000000000000081149250610d14565b83823461049c578060031936011261049c57602090610da1610d98610da8565b60243590610f61565b9051908152f35b600435906001600160a01b03821682036107bf57565b602435906001600160a01b03821682036107bf57565b919082519283825260005b848110610e00575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ddf565b67ffffffffffffffff8111610e2857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610e2857604052565b67ffffffffffffffff8111610e285760051b60200190565b81601f820112156107bf57803591610e8f83610e60565b92610e9d6040519485610e3e565b808452602092838086019260051b8201019283116107bf578301905b828210610ec7575050505090565b81358152908301908301610eb9565b81601f820112156107bf5780359067ffffffffffffffff8211610e285760405192610f0b601f8401601f191660200185610e3e565b828452602083830101116107bf57816000926020809301838601378301015290565b90815180825260208080930193019160005b828110610f4d575050505090565b835185529381019392810192600101610f3f565b6001600160a01b0316908115610f8e57600052600060205260406000209060005260205260406000205490565b608460405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e6572000000000000000000000000000000000000000000006064820152fd5b60001981146110075760010190565b634e487b7160e01b600052601160045260246000fd5b80518210156110315760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b1561104e57565b608460405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152fd5b156110bf57565b608460405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b1561113057565b608460405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152fd5b9190820180921161100757565b908160209103126107bf57516001600160e01b0319811681036107bf5790565b60009060033d116111d457565b905060046000803e60005160e01c90565b600060443d1061124357604051600319913d83016004833e815167ffffffffffffffff918282113d6024840111176112465781840194855193841161124e573d85010160208487010111611246575061124392910160200190610e3e565b90565b949350505050565b50949350505050565b604051906040820182811067ffffffffffffffff821117610e28576040526001825260208201602036823782511561103157529056fea2646970667358221220547a242a4ce9b48a7390fe4daddcb625a9fcc0f42ee1f73cee628b9cd35f63e164736f6c63430008110033";

type CustomERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomERC1155__factory extends ContractFactory {
  constructor(...args: CustomERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    logger_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CustomERC1155> {
    return super.deploy(
      uri_,
      logger_,
      overrides || {}
    ) as Promise<CustomERC1155>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    logger_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, logger_, overrides || {});
  }
  override attach(address: string): CustomERC1155 {
    return super.attach(address) as CustomERC1155;
  }
  override connect(signer: Signer): CustomERC1155__factory {
    return super.connect(signer) as CustomERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomERC1155Interface {
    return new utils.Interface(_abi) as CustomERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CustomERC1155 {
    return new Contract(address, _abi, signerOrProvider) as CustomERC1155;
  }
}
