/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PaymentSplitter,
  PaymentSplitterInterface,
} from "../../../../@openzeppelin/contracts/finance/PaymentSplitter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "shares_",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60406080815262000f2880380380620000188162000416565b9283398101918082840312620003f05781516001600160401b039390848111620003f05783019381601f86011215620003f057845193620000636200005d8662000452565b62000416565b9586958088526020808099019160051b83010191858311620003f0578801905b828210620003f55750505085810151918211620003f057019080601f83011215620003f057815191620000ba6200005d8462000452565b92868085838152019160051b830101928311620003f05786809201905b838210620003e05750505050825181510362000381578251156200033d5760005b83518110156200032e576001600160a01b036200011682866200046a565b51166200012482846200046a565b518115620002d55780156200029157816000526002808852856000205462000239576004908154680100000000000000008110156200022457600181018084558110156200020f578260005289600020018460018060a01b031982541617905583600052885281866000205560005490828201809211620001fa57506000558451918252868201527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac908490a16000198114620001e457600101620000f8565b634e487b7160e01b600052601160045260246000fd5b601190634e487b7160e01b6000525260246000fd5b603283634e487b7160e01b6000525260246000fd5b604183634e487b7160e01b6000525260246000fd5b855162461bcd60e51b815260048101899052602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201526a206861732073686172657360a81b6064820152608490fd5b845162461bcd60e51b815260048101889052601d60248201527f5061796d656e7453706c69747465723a207368617265732061726520300000006044820152606490fd5b845162461bcd60e51b815260048101889052602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201526b7a65726f206164647265737360a01b6064820152608490fd5b8251610a929081620004968239f35b815162461bcd60e51b815260048101859052601a60248201527f5061796d656e7453706c69747465723a206e6f207061796565730000000000006044820152606490fd5b815162461bcd60e51b815260048101859052603260248201527f5061796d656e7453706c69747465723a2070617965657320616e6420736861726044820152710cae640d8cadccee8d040dad2e6dac2e8c6d60731b6064820152608490fd5b81518152908201908201620000d7565b600080fd5b81516001600160a01b0381168103620003f057815290880190880162000083565b6040519190601f01601f191682016001600160401b038111838210176200043c57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116200043c5760051b60200190565b80518210156200047f5760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe60406080815260048036101561004e575b50361561001c57600080fd5b513381523460208201527f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77090604090a1005b600090813560e01c90816319165587146104ed5781633a98ef39146104d0578163406072a91461048757816348b75044146102605781638b83209b146101f2575080639852595c146101bb578063a3f8eace14610195578063c45ac05014610160578063ce7c2ac214610129578063d79779b2146100f25763e33b7de3036100105790346100ee57816003193601126100ee576020906001549051908152f35b5080fd5b5090346100ee5760203660031901126100ee57806020926001600160a01b0361011961065e565b1681526005845220549051908152f35b5090346100ee5760203660031901126100ee57806020926001600160a01b0361015061065e565b1681526002845220549051908152f35b5090346100ee57806003193601126100ee5760209061018e61018061065e565b610188610679565b9061071c565b9051908152f35b5090346100ee5760203660031901126100ee5760209061018e6101b661065e565b6106b2565b5090346100ee5760203660031901126100ee57806020926001600160a01b036101e261065e565b1681526003845220549051908152f35b83833461025d57602036600319011261025d57823590835482101561024a57906020936001600160a01b0392527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0154169051908152f35b80603285634e487b7160e01b6024945252fd5b80fd5b9050346100ee57826003193601126100ee5761027a61065e565b610282610679565b6001600160a01b039283821693848652602090600282526102a78888205415156107e9565b6102b1848661071c565b946102bd86151561085a565b1694858752600582528787206102d486825461068f565b905585875260068252878720908752815286862080548501905586517fa9059cbb000000000000000000000000000000000000000000000000000000008183019081526001600160a01b03851660248301526044808301879052825261033b6064836106e4565b88519189830183811067ffffffffffffffff821117610474578a528383527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564848401525161039b929189918291828b5af1610394610949565b9088610989565b8051806103e5575b88516001600160a01b038616815260208101879052889088907f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a90604090a280f35b8183918101031261047057810151801590811503610470576104085780806103a3565b6084925086519162461bcd60e51b8352820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b8680fd5b60248a604188634e487b7160e01b835252fd5b8284346100ee57806003193601126100ee57806020926104a561065e565b6104ad610679565b6001600160a01b0391821683526006865283832091168252845220549051908152f35b8284346100ee57816003193601126100ee57602091549051908152f35b8284346100ee576020928360031936011261065a578035906001600160a01b038216809203610656578184526002855261052b8385205415156107e9565b610534826106b2565b9061054082151561085a565b61054c8260015461068f565b60015582855260038652838520828154019055814710610614578480808085875af1610576610949565b50156105ac57507fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b05693948351928352820152a180f35b6084908685519162461bcd60e51b8352820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152fd5b6064908685519162461bcd60e51b8352820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152fd5b8380fd5b8280fd5b600435906001600160a01b038216820361067457565b600080fd5b602435906001600160a01b038216820361067457565b9190820180921161069c57565b634e487b7160e01b600052601160045260246000fd5b6106e1906106c3476001549061068f565b6001600160a01b0382166000526003602052604060002054916108cb565b90565b90601f8019910116810190811067ffffffffffffffff82111761070657604052565b634e487b7160e01b600052604160045260246000fd5b91906001600160a01b03809316604051937f70a0823100000000000000000000000000000000000000000000000000000000855230600486015260208086602481865afa9586156107dd576000966107ac575b5061078c6106e1959684600052600583526040600020549061068f565b9260005260068152604060002091841660005252604060002054916108cb565b958187813d83116107d6575b6107c281836106e4565b8101031261025d575094519461078c61076f565b503d6107b8565b6040513d6000823e3d90fd5b156107f057565b608460405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201527f73686172657300000000000000000000000000000000000000000000000000006064820152fd5b1561086157565b608460405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201527f647565207061796d656e740000000000000000000000000000000000000000006064820152fd5b906001600160a01b036000921682526002602052604082205490818102918183041490151715610935578154908115610921570491820391821161090d575090565b80634e487b7160e01b602492526011600452fd5b602483634e487b7160e01b81526012600452fd5b602482634e487b7160e01b81526011600452fd5b3d15610984573d9067ffffffffffffffff82116107065760405191610978601f8201601f1916602001846106e4565b82523d6000602084013e565b606090565b919290156109ea575081511561099d575090565b3b156109a65790565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156109fd5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610a43575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610a2056fea26469706673582212204e735ba0e9d6e14d0091f6f84f39c52442e9d50749e6892e2b5243e79612c4e164736f6c63430008110033";

type PaymentSplitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentSplitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentSplitter__factory extends ContractFactory {
  constructor(...args: PaymentSplitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    payees: PromiseOrValue<string>[],
    shares_: PromiseOrValue<BigNumberish>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<PaymentSplitter> {
    return super.deploy(
      payees,
      shares_,
      overrides || {}
    ) as Promise<PaymentSplitter>;
  }
  override getDeployTransaction(
    payees: PromiseOrValue<string>[],
    shares_: PromiseOrValue<BigNumberish>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(payees, shares_, overrides || {});
  }
  override attach(address: string): PaymentSplitter {
    return super.attach(address) as PaymentSplitter;
  }
  override connect(signer: Signer): PaymentSplitter__factory {
    return super.connect(signer) as PaymentSplitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentSplitterInterface {
    return new utils.Interface(_abi) as PaymentSplitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymentSplitter {
    return new Contract(address, _abi, signerOrProvider) as PaymentSplitter;
  }
}
